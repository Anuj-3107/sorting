class Solution {
    public String frequencySort(String s) {
        
        // ArrayList<Character> a1=new ArrayList<>();
        // ArrayList<Integer> a2=new ArrayList<>();
        
        HashMap<Character,Integer> map=new HashMap<>();
        
        for(int i=0;i<s.length();i++)
        {
            // if(!a1.contains(s.charAt(i)))
            // {
            //     a1.add(s.charAt(i));
            //     a2.add(1);
            // }
            // else{
            //     a2.set(a1.indexOf(s.charAt(i)),a2.get(a1.indexOf(s.charAt(i)))+1);
            // }
            map.put(s.charAt(i),map.getOrDefault(s.charAt(i),0)+1);
        }
        
        
        // PriorityQueue<Character> pq = new PriorityQueue<>((a,b) -> a2.get(a1.indexOf(b)) - a2.get(a1.indexOf(a)));
        PriorityQueue<Character> pq = new PriorityQueue<>((a,b) -> map.get(b) - map.get(a));
        pq.addAll(map.keySet());
        
        String ans="";
        
        while(!pq.isEmpty())
        {
            char c=pq.poll();
            int m=map.get(c);
            while(m>0)
            {
                ans=ans+c;
                m--;
            }
        }
        
        return ans;
    }
}
